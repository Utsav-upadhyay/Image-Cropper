{"version":3,"file":"cropper.js","sources":["../../src/js/constants.js","../../src/js/defaults.js","../../src/js/template.js","../../src/js/utilities.js","../../src/js/render.js","../../src/js/preview.js","../../src/js/events.js","../../src/js/handlers.js","../../src/js/change.js","../../src/js/methods.js","../../src/js/cropper.js"],"sourcesContent":["export const IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexport const WINDOW = IS_BROWSER ? window : {};\nexport const IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\nexport const HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\nexport const NAMESPACE = 'cropper';\n\n// Actions\nexport const ACTION_ALL = 'all';\nexport const ACTION_CROP = 'crop';\nexport const ACTION_MOVE = 'move';\nexport const ACTION_ZOOM = 'zoom';\nexport const ACTION_EAST = 'e';\nexport const ACTION_WEST = 'w';\nexport const ACTION_SOUTH = 's';\nexport const ACTION_NORTH = 'n';\nexport const ACTION_NORTH_EAST = 'ne';\nexport const ACTION_NORTH_WEST = 'nw';\nexport const ACTION_SOUTH_EAST = 'se';\nexport const ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nexport const CLASS_CROP = `${NAMESPACE}-crop`;\nexport const CLASS_DISABLED = `${NAMESPACE}-disabled`;\nexport const CLASS_HIDDEN = `${NAMESPACE}-hidden`;\nexport const CLASS_HIDE = `${NAMESPACE}-hide`;\nexport const CLASS_INVISIBLE = `${NAMESPACE}-invisible`;\nexport const CLASS_MODAL = `${NAMESPACE}-modal`;\nexport const CLASS_MOVE = `${NAMESPACE}-move`;\n\n// Data keys\nexport const DATA_ACTION = `${NAMESPACE}Action`;\nexport const DATA_PREVIEW = `${NAMESPACE}Preview`;\n\n// Drag modes\nexport const DRAG_MODE_CROP = 'crop';\nexport const DRAG_MODE_MOVE = 'move';\nexport const DRAG_MODE_NONE = 'none';\n\n// Events\nexport const EVENT_CROP = 'crop';\nexport const EVENT_CROP_END = 'cropend';\nexport const EVENT_CROP_MOVE = 'cropmove';\nexport const EVENT_CROP_START = 'cropstart';\nexport const EVENT_DBLCLICK = 'dblclick';\nexport const EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\nexport const EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\nexport const EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\nexport const EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\nexport const EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\nexport const EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\nexport const EVENT_READY = 'ready';\nexport const EVENT_RESIZE = 'resize';\nexport const EVENT_WHEEL = 'wheel';\nexport const EVENT_ZOOM = 'zoom';\n\n// Mime types\nexport const MIME_TYPE_JPEG = 'image/jpeg';\n\n// RegExps\nexport const REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\nexport const REGEXP_DATA_URL = /^data:/;\nexport const REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nexport const REGEXP_TAG_NAME = /^img|canvas$/i;\n\n// Misc\n// Inspired by the default width and height of a canvas element.\nexport const MIN_CONTAINER_WIDTH = 200;\nexport const MIN_CONTAINER_HEIGHT = 100;\n","import {\n  DRAG_MODE_CROP,\n  MIN_CONTAINER_HEIGHT,\n  MIN_CONTAINER_WIDTH,\n} from './constants';\n\nexport default {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: MIN_CONTAINER_WIDTH,\n  minContainerHeight: MIN_CONTAINER_HEIGHT,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null,\n};\n","export default (\n  '<div class=\"cropper-container\" touch-action=\"none\">'\n    + '<div class=\"cropper-wrap-box\">'\n      + '<div class=\"cropper-canvas\"></div>'\n    + '</div>'\n    + '<div class=\"cropper-drag-box\"></div>'\n    + '<div class=\"cropper-crop-box\">'\n      + '<span class=\"cropper-view-box\"></span>'\n      + '<span class=\"cropper-dashed dashed-h\"></span>'\n      + '<span class=\"cropper-dashed dashed-v\"></span>'\n      + '<span class=\"cropper-center\"></span>'\n      + '<span class=\"cropper-face\"></span>'\n      + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>'\n      + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>'\n      + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>'\n      + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>'\n      + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>'\n      + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>'\n      + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>'\n      + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>'\n      + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>'\n      + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>'\n      + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>'\n      + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>'\n    + '</div>'\n  + '</div>'\n);\n","import { IS_BROWSER, WINDOW } from './constants';\n\n/**\n * Check if the given value is not a number.\n */\nexport const isNaN = Number.isNaN || WINDOW.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nexport function isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is a positive number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n */\nexport const isPositiveNumber = (value) => value > 0 && value < Infinity;\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n\nconst { hasOwnProperty } = Object.prototype;\n\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\nexport function isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    const { constructor } = value;\n    const { prototype } = constructor;\n\n    return constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\n\nconst { slice } = Array.prototype;\n\n/**\n * Convert array-like or iterable object to an array.\n * @param {*} value - The value to convert.\n * @returns {Array} Returns a new array.\n */\nexport function toArray(value) {\n  return Array.from ? Array.from(value) : slice.call(value);\n}\n\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\nexport function forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)/* array-like */) {\n      toArray(data).forEach((value, key) => {\n        callback.call(data, value, key, data);\n      });\n    } else if (isObject(data)) {\n      Object.keys(data).forEach((key) => {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n\n/**\n * Extend the given object.\n * @param {*} target - The target object to extend.\n * @param {*} args - The rest objects for merging to the target object.\n * @returns {Object} The extended object.\n */\nexport const assign = Object.assign || function assign(target, ...args) {\n  if (isObject(target) && args.length > 0) {\n    args.forEach((arg) => {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach((key) => {\n          target[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return target;\n};\n\nconst REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n/**\n * Normalize decimal number.\n * Check out {@link https://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nexport function normalizeDecimalNumber(value, times = 100000000000) {\n  return REGEXP_DECIMALS.test(value) ? (Math.round(value * times) / times) : value;\n}\n\nconst REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\nexport function setStyle(element, styles) {\n  const { style } = element;\n\n  forEach(styles, (value, property) => {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value = `${value}px`;\n    }\n\n    style[property] = value;\n  });\n}\n\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\nexport function hasClass(element, value) {\n  return element.classList\n    ? element.classList.contains(value)\n    : element.className.indexOf(value) > -1;\n}\n\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\nexport function addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, (elem) => {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  const className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = `${className} ${value}`;\n  }\n}\n\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\nexport function removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, (elem) => {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\nexport function toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, (elem) => {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nconst REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\nexport function toParamCase(value) {\n  return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n}\n\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\nexport function getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(`data-${toParamCase(name)}`);\n}\n\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\nexport function setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(`data-${toParamCase(name)}`, data);\n  }\n}\n\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\nexport function removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (error) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (error) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute(`data-${toParamCase(name)}`);\n  }\n}\n\nconst REGEXP_SPACES = /\\s\\s*/;\nconst onceSupported = (() => {\n  let supported = false;\n\n  if (IS_BROWSER) {\n    let once = false;\n    const listener = () => {};\n    const options = Object.defineProperty({}, 'once', {\n      get() {\n        supported = true;\n        return once;\n      },\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set(value) {\n        once = value;\n      },\n    });\n\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n})();\n\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nexport function removeListener(element, type, listener, options = {}) {\n  let handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach((event) => {\n    if (!onceSupported) {\n      const { listeners } = element;\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nexport function addListener(element, type, listener, options = {}) {\n  let handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach((event) => {\n    if (options.once && !onceSupported) {\n      const { listeners = {} } = element;\n\n      handler = (...args) => {\n        delete listeners[event][listener];\n        element.removeEventListener(event, handler, options);\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, handler, options);\n  });\n}\n\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\nexport function dispatchEvent(element, type, data) {\n  let event;\n\n  // Event and CustomEvent on IE9-11 are global objects, not constructors\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true,\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\nexport function getOffset(element) {\n  const box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop),\n  };\n}\n\nconst { location } = WINDOW;\nconst REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nexport function isCrossOriginURL(url) {\n  const parts = url.match(REGEXP_ORIGINS);\n\n  return parts !== null && (\n    parts[1] !== location.protocol\n    || parts[2] !== location.hostname\n    || parts[3] !== location.port\n  );\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nexport function addTimestamp(url) {\n  const timestamp = `timestamp=${(new Date()).getTime()}`;\n\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nexport function getTransforms({\n  rotate,\n  scaleX,\n  scaleY,\n  translateX,\n  translateY,\n}) {\n  const values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(`translateX(${translateX}px)`);\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(`translateY(${translateY}px)`);\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(`rotate(${rotate}deg)`);\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(`scaleX(${scaleX})`);\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(`scaleY(${scaleY})`);\n  }\n\n  const transform = values.length ? values.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform,\n  };\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nexport function getMaxZoomRatio(pointers) {\n  const pointers2 = { ...pointers };\n  let maxRatio = 0;\n\n  forEach(pointers, (pointer, pointerId) => {\n    delete pointers2[pointerId];\n\n    forEach(pointers2, (pointer2) => {\n      const x1 = Math.abs(pointer.startX - pointer2.startX);\n      const y1 = Math.abs(pointer.startY - pointer2.startY);\n      const x2 = Math.abs(pointer.endX - pointer2.endX);\n      const y2 = Math.abs(pointer.endY - pointer2.endY);\n      const z1 = Math.sqrt((x1 * x1) + (y1 * y1));\n      const z2 = Math.sqrt((x2 * x2) + (y2 * y2));\n      const ratio = (z2 - z1) / z1;\n\n      if (Math.abs(ratio) > Math.abs(maxRatio)) {\n        maxRatio = ratio;\n      }\n    });\n  });\n\n  return maxRatio;\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nexport function getPointer({ pageX, pageY }, endOnly) {\n  const end = {\n    endX: pageX,\n    endY: pageY,\n  };\n\n  return endOnly ? end : ({\n    startX: pageX,\n    startY: pageY,\n    ...end,\n  });\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nexport function getPointersCenter(pointers) {\n  let pageX = 0;\n  let pageY = 0;\n  let count = 0;\n\n  forEach(pointers, ({ startX, startY }) => {\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX,\n    pageY,\n  };\n}\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\nexport function getAdjustedSizes(\n  {\n    aspectRatio,\n    height,\n    width,\n  },\n  type = 'contain', // or 'cover'\n) {\n  const isValidWidth = isPositiveNumber(width);\n  const isValidHeight = isPositiveNumber(height);\n\n  if (isValidWidth && isValidHeight) {\n    const adjustedWidth = height * aspectRatio;\n\n    if ((type === 'contain' && adjustedWidth > width) || (type === 'cover' && adjustedWidth < width)) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidWidth) {\n    height = width / aspectRatio;\n  } else if (isValidHeight) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width,\n    height,\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nexport function getRotatedSizes({ width, height, degree }) {\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width,\n    };\n  }\n\n  const arc = ((degree % 90) * Math.PI) / 180;\n  const sinArc = Math.sin(arc);\n  const cosArc = Math.cos(arc);\n  const newWidth = (width * cosArc) + (height * sinArc);\n  const newHeight = (width * sinArc) + (height * cosArc);\n\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth,\n  } : {\n    width: newWidth,\n    height: newHeight,\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nexport function getSourceCanvas(\n  image,\n  {\n    aspectRatio: imageAspectRatio,\n    naturalWidth: imageNaturalWidth,\n    naturalHeight: imageNaturalHeight,\n    rotate = 0,\n    scaleX = 1,\n    scaleY = 1,\n  },\n  {\n    aspectRatio,\n    naturalWidth,\n    naturalHeight,\n  },\n  {\n    fillColor = 'transparent',\n    imageSmoothingEnabled = true,\n    imageSmoothingQuality = 'low',\n    maxWidth = Infinity,\n    maxHeight = Infinity,\n    minWidth = 0,\n    minHeight = 0,\n  },\n) {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  const maxSizes = getAdjustedSizes({\n    aspectRatio,\n    width: maxWidth,\n    height: maxHeight,\n  });\n  const minSizes = getAdjustedSizes({\n    aspectRatio,\n    width: minWidth,\n    height: minHeight,\n  }, 'cover');\n  const width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  const height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n  // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n  const destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight,\n  });\n  const destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight,\n  }, 'cover');\n  const destWidth = Math.min(\n    destMaxSizes.width,\n    Math.max(destMinSizes.width, imageNaturalWidth),\n  );\n  const destHeight = Math.min(\n    destMaxSizes.height,\n    Math.max(destMinSizes.height, imageNaturalHeight),\n  );\n  const params = [\n    -destWidth / 2,\n    -destHeight / 2,\n    destWidth,\n    destHeight,\n  ];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate((rotate * Math.PI) / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage(image, ...params.map((param) => Math.floor(normalizeDecimalNumber(param))));\n  context.restore();\n  return canvas;\n}\n\nconst { fromCharCode } = String;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\nexport function getStringFromCharCode(dataView, start, length) {\n  let str = '';\n\n  length += start;\n\n  for (let i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nconst REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nexport function dataURLToArrayBuffer(dataURL) {\n  const base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  const binary = atob(base64);\n  const arrayBuffer = new ArrayBuffer(binary.length);\n  const uint8 = new Uint8Array(arrayBuffer);\n\n  forEach(uint8, (value, i) => {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nexport function arrayBufferToDataURL(arrayBuffer, mimeType) {\n  const chunks = [];\n\n  // Chunk Typed Array for better performance (#435)\n  const chunkSize = 8192;\n  let uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n    // eslint-disable-next-line prefer-spread\n    chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return `data:${mimeType};base64,${btoa(chunks.join(''))}`;\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nexport function resetAndGetOrientation(arrayBuffer) {\n  const dataView = new DataView(arrayBuffer);\n  let orientation;\n\n  // Ignores range error when the image does not have correct Exif information\n  try {\n    let littleEndian;\n    let app1Start;\n    let ifdStart;\n\n    // Only handle JPEG image (start by 0xFFD8)\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      const length = dataView.byteLength;\n      let offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      const exifIDCode = app1Start + 4;\n      const tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        const endianness = dataView.getUint16(tiffOffset);\n\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            const firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n      }\n    }\n\n    if (ifdStart) {\n      const length = dataView.getUint16(ifdStart, littleEndian);\n      let offset;\n      let i;\n\n      for (i = 0; i < length; i += 1) {\n        offset = ifdStart + (i * 12) + 2;\n\n        if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(offset, 1, littleEndian);\n          break;\n        }\n      }\n    }\n  } catch (error) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nexport function parseOrientation(orientation) {\n  let rotate = 0;\n  let scaleX = 1;\n  let scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate,\n    scaleX,\n    scaleY,\n  };\n}\n","import {\n  ACTION_ALL,\n  ACTION_MOVE,\n  CLASS_HIDDEN,\n  DATA_ACTION,\n  EVENT_CROP,\n  MIN_CONTAINER_HEIGHT,\n  MIN_CONTAINER_WIDTH,\n} from './constants';\nimport {\n  addClass,\n  assign,\n  dispatchEvent,\n  getAdjustedSizes,\n  getRotatedSizes,\n  getTransforms,\n  removeClass,\n  setData,\n  setStyle,\n} from './utilities';\n\nexport default {\n  render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n\n  initContainer() {\n    const {\n      element,\n      options,\n      container,\n      cropper,\n    } = this;\n    const minWidth = Number(options.minContainerWidth);\n    const minHeight = Number(options.minContainerHeight);\n\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n\n    const containerData = {\n      width: Math.max(\n        container.offsetWidth,\n        minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH,\n      ),\n      height: Math.max(\n        container.offsetHeight,\n        minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT,\n      ),\n    };\n\n    this.containerData = containerData;\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height,\n    });\n\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n\n  // Canvas (image wrapper)\n  initCanvas() {\n    const { containerData, imageData } = this;\n    const { viewMode } = this.options;\n    const rotated = Math.abs(imageData.rotate) % 180 === 90;\n    const naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    const naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    const aspectRatio = naturalWidth / naturalHeight;\n    let canvasWidth = containerData.width;\n    let canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    const canvasData = {\n      aspectRatio,\n      naturalWidth,\n      naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight,\n    };\n\n    this.canvasData = canvasData;\n    this.limited = (viewMode === 1 || viewMode === 2);\n    this.limitCanvas(true, true);\n    canvasData.width = Math.min(\n      Math.max(canvasData.width, canvasData.minWidth),\n      canvasData.maxWidth,\n    );\n    canvasData.height = Math.min(\n      Math.max(canvasData.height, canvasData.minHeight),\n      canvasData.maxHeight,\n    );\n    canvasData.left = (containerData.width - canvasData.width) / 2;\n    canvasData.top = (containerData.height - canvasData.height) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    this.initialCanvasData = assign({}, canvasData);\n  },\n\n  limitCanvas(sizeLimited, positionLimited) {\n    const {\n      options,\n      containerData,\n      canvasData,\n      cropBoxData,\n    } = this;\n    const { viewMode } = options;\n    const { aspectRatio } = canvasData;\n    const cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      let minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      let minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(\n            minCanvasWidth,\n            cropped ? cropBoxData.width : 0,\n          );\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(\n            minCanvasHeight,\n            cropped ? cropBoxData.height : 0,\n          );\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      ({ width: minCanvasWidth, height: minCanvasHeight } = getAdjustedSizes({\n        aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight,\n      }));\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        const newCanvasLeft = containerData.width - canvasData.width;\n        const newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(\n            cropBoxData.left,\n            cropBoxData.left + (cropBoxData.width - canvasData.width),\n          );\n          canvasData.minTop = Math.min(\n            cropBoxData.top,\n            cropBoxData.top + (cropBoxData.height - canvasData.height),\n          );\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n\n  renderCanvas(changed, transformed) {\n    const { canvasData, imageData } = this;\n\n    if (transformed) {\n      const { width: naturalWidth, height: naturalHeight } = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0,\n      });\n      const width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      const height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth\n      || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight\n      || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(\n      Math.max(canvasData.width, canvasData.minWidth),\n      canvasData.maxWidth,\n    );\n    canvasData.height = Math.min(\n      Math.max(canvasData.height, canvasData.minHeight),\n      canvasData.maxHeight,\n    );\n\n    this.limitCanvas(false, true);\n\n    canvasData.left = Math.min(\n      Math.max(canvasData.left, canvasData.minLeft),\n      canvasData.maxLeft,\n    );\n    canvasData.top = Math.min(\n      Math.max(canvasData.top, canvasData.minTop),\n      canvasData.maxTop,\n    );\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height,\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top,\n    })));\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n\n  renderImage(changed) {\n    const { canvasData, imageData } = this;\n    const width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    const height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n\n    assign(imageData, {\n      width,\n      height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2,\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height,\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top,\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n\n  initCropBox() {\n    const { options, canvasData } = this;\n    const aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    const autoCropArea = Number(options.autoCropArea) || 0.8;\n    const cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height,\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(\n      Math.max(cropBoxData.width, cropBoxData.minWidth),\n      cropBoxData.maxWidth,\n    );\n    cropBoxData.height = Math.min(\n      Math.max(cropBoxData.height, cropBoxData.minHeight),\n      cropBoxData.maxHeight,\n    );\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(\n      cropBoxData.minWidth,\n      cropBoxData.width * autoCropArea,\n    );\n    cropBoxData.height = Math.max(\n      cropBoxData.minHeight,\n      cropBoxData.height * autoCropArea,\n    );\n    cropBoxData.left = (\n      canvasData.left + ((canvasData.width - cropBoxData.width) / 2)\n    );\n    cropBoxData.top = (\n      canvasData.top + ((canvasData.height - cropBoxData.height) / 2)\n    );\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n\n  limitCropBox(sizeLimited, positionLimited) {\n    const {\n      options,\n      containerData,\n      canvasData,\n      cropBoxData,\n      limited,\n    } = this;\n    const { aspectRatio } = options;\n\n    if (sizeLimited) {\n      let minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      let minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      let maxCropBoxWidth = limited ? Math.min(\n        containerData.width,\n        canvasData.width,\n        canvasData.width + canvasData.left,\n        containerData.width - canvasData.left,\n      ) : containerData.width;\n      let maxCropBoxHeight = limited ? Math.min(\n        containerData.height,\n        canvasData.height,\n        canvasData.height + canvasData.top,\n        containerData.height - canvasData.top,\n      ) : containerData.height;\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(\n          containerData.width,\n          canvasData.left + canvasData.width,\n        ) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(\n          containerData.height,\n          canvasData.top + canvasData.height,\n        ) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n\n  renderCropBox() {\n    const { options, containerData, cropBoxData } = this;\n\n    if (cropBoxData.width > cropBoxData.maxWidth\n      || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight\n      || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(\n      Math.max(cropBoxData.width, cropBoxData.minWidth),\n      cropBoxData.maxWidth,\n    );\n    cropBoxData.height = Math.min(\n      Math.max(cropBoxData.height, cropBoxData.minHeight),\n      cropBoxData.maxHeight,\n    );\n\n    this.limitCropBox(false, true);\n\n    cropBoxData.left = Math.min(\n      Math.max(cropBoxData.left, cropBoxData.minLeft),\n      cropBoxData.maxLeft,\n    );\n    cropBoxData.top = Math.min(\n      Math.max(cropBoxData.top, cropBoxData.minTop),\n      cropBoxData.maxTop,\n    );\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width\n        && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height,\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top,\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n\n  output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  },\n};\n","import { DATA_PREVIEW } from './constants';\nimport {\n  assign,\n  forEach,\n  getData,\n  getTransforms,\n  removeData,\n  setData,\n  setStyle,\n} from './utilities';\n\nexport default {\n  initPreview() {\n    const { element, crossOrigin } = this;\n    const { preview } = this.options;\n    const url = crossOrigin ? this.crossOriginUrl : this.url;\n    const alt = element.alt || 'The image to preview';\n    const image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    image.alt = alt;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    let previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n\n    forEach(previews, (el) => {\n      const img = document.createElement('img');\n\n      // Save the original size for recover\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML,\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n      img.alt = alt;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = (\n        'display:block;'\n        + 'width:100%;'\n        + 'height:auto;'\n        + 'min-width:0!important;'\n        + 'min-height:0!important;'\n        + 'max-width:none!important;'\n        + 'max-height:none!important;'\n        + 'image-orientation:0deg!important;\"'\n      );\n\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n\n  resetPreview() {\n    forEach(this.previews, (element) => {\n      const data = getData(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height,\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n\n  preview() {\n    const { imageData, canvasData, cropBoxData } = this;\n    const { width: cropBoxWidth, height: cropBoxHeight } = cropBoxData;\n    const { width, height } = imageData;\n    const left = cropBoxData.left - canvasData.left - imageData.left;\n    const top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width,\n      height,\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top,\n    }, imageData))));\n\n    forEach(this.previews, (element) => {\n      const data = getData(element, DATA_PREVIEW);\n      const originalWidth = data.width;\n      const originalHeight = data.height;\n      let newWidth = originalWidth;\n      let newHeight = originalHeight;\n      let ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight,\n      });\n\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio,\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio,\n      }, imageData))));\n    });\n  },\n};\n","import {\n  EVENT_CROP,\n  EVENT_CROP_END,\n  EVENT_CROP_MOVE,\n  EVENT_CROP_START,\n  EVENT_DBLCLICK,\n  EVENT_POINTER_DOWN,\n  EVENT_POINTER_MOVE,\n  EVENT_POINTER_UP,\n  EVENT_RESIZE,\n  EVENT_WHEEL,\n  EVENT_ZOOM,\n} from './constants';\nimport {\n  addListener,\n  isFunction,\n  removeListener,\n} from './utilities';\n\nexport default {\n  bind() {\n    const { element, options, cropper } = this;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, (this.onCropStart = this.cropStart.bind(this)));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, (this.onWheel = this.wheel.bind(this)), {\n        passive: false,\n        capture: true,\n      });\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, (this.onDblclick = this.dblclick.bind(this)));\n    }\n\n    addListener(\n      element.ownerDocument,\n      EVENT_POINTER_MOVE,\n      (this.onCropMove = this.cropMove.bind(this)),\n    );\n    addListener(\n      element.ownerDocument,\n      EVENT_POINTER_UP,\n      (this.onCropEnd = this.cropEnd.bind(this)),\n    );\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, (this.onResize = this.resize.bind(this)));\n    }\n  },\n\n  unbind() {\n    const { element, options, cropper } = this;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n        passive: false,\n        capture: true,\n      });\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  },\n};\n","import {\n  ACTION_CROP,\n  ACTION_ZOOM,\n  CLASS_CROP,\n  CLASS_MODAL,\n  DATA_ACTION,\n  DRAG_MODE_CROP,\n  DRAG_MODE_MOVE,\n  DRAG_MODE_NONE,\n  EVENT_CROP_END,\n  EVENT_CROP_MOVE,\n  EVENT_CROP_START,\n  REGEXP_ACTIONS,\n} from './constants';\nimport {\n  addClass,\n  assign,\n  dispatchEvent,\n  forEach,\n  getData,\n  getPointer,\n  hasClass,\n  isNumber,\n  toggleClass,\n} from './utilities';\n\nexport default {\n  resize() {\n    if (this.disabled) {\n      return;\n    }\n\n    const { options, container, containerData } = this;\n    const ratioX = container.offsetWidth / containerData.width;\n    const ratioY = container.offsetHeight / containerData.height;\n    const ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1) {\n      let canvasData;\n      let cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, (n, i) => {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, (n, i) => {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n\n  dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n\n  wheel(event) {\n    const ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    let delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(() => {\n      this.wheeling = false;\n    }, 50);\n\n    if (event.deltaY) {\n      delta = event.deltaY > 0 ? 1 : -1;\n    } else if (event.wheelDelta) {\n      delta = -event.wheelDelta / 120;\n    } else if (event.detail) {\n      delta = event.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, event);\n  },\n\n  cropStart(event) {\n    const { buttons, button } = event;\n\n    if (\n      this.disabled\n\n      // Handle mouse event and pointer event and ignore touch event\n      || ((\n        event.type === 'mousedown'\n        || (event.type === 'pointerdown' && event.pointerType === 'mouse')\n      ) && (\n        // No primary button (Usually the left button)\n        (isNumber(buttons) && buttons !== 1)\n        || (isNumber(button) && button !== 0)\n\n        // Open context menu\n        || event.ctrlKey\n      ))\n    ) {\n      return;\n    }\n\n    const { options, pointers } = this;\n    let action;\n\n    if (event.changedTouches) {\n      // Handle touch event\n      forEach(event.changedTouches, (touch) => {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[event.pointerId || 0] = getPointer(event);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(event.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: event,\n      action,\n    }) === false) {\n      return;\n    }\n\n    // This line is required for preventing page zooming in iOS browsers\n    event.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n\n  cropMove(event) {\n    const { action } = this;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    const { pointers } = this;\n\n    event.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: event,\n      action,\n    }) === false) {\n      return;\n    }\n\n    if (event.changedTouches) {\n      forEach(event.changedTouches, (touch) => {\n        // The first parameter should not be undefined (#432)\n        assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n    }\n\n    this.change(event);\n  },\n\n  cropEnd(event) {\n    if (this.disabled) {\n      return;\n    }\n\n    const { action, pointers } = this;\n\n    if (event.changedTouches) {\n      forEach(event.changedTouches, (touch) => {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[event.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: event,\n      action,\n    });\n  },\n};\n","import {\n  ACTION_ALL,\n  ACTION_CROP,\n  ACTION_EAST,\n  ACTION_MOVE,\n  ACTION_NORTH,\n  ACTION_NORTH_EAST,\n  ACTION_NORTH_WEST,\n  ACTION_SOUTH,\n  ACTION_SOUTH_EAST,\n  ACTION_SOUTH_WEST,\n  ACTION_WEST,\n  ACTION_ZOOM,\n  CLASS_HIDDEN,\n} from './constants';\nimport {\n  forEach,\n  getMaxZoomRatio,\n  getOffset,\n  removeClass,\n} from './utilities';\n\nexport default {\n  change(event) {\n    const {\n      options,\n      canvasData,\n      containerData,\n      cropBoxData,\n      pointers,\n    } = this;\n    let { action } = this;\n    let { aspectRatio } = options;\n    let {\n      left,\n      top,\n      width,\n      height,\n    } = cropBoxData;\n    const right = left + width;\n    const bottom = top + height;\n    let minLeft = 0;\n    let minTop = 0;\n    let maxWidth = containerData.width;\n    let maxHeight = containerData.height;\n    let renderable = true;\n    let offset;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && event.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      ({ minLeft, minTop } = cropBoxData);\n      maxWidth = minLeft + Math.min(\n        containerData.width,\n        canvasData.width,\n        canvasData.left + canvasData.width,\n      );\n      maxHeight = minTop + Math.min(\n        containerData.height,\n        canvasData.height,\n        canvasData.top + canvasData.height,\n      );\n    }\n\n    const pointer = pointers[Object.keys(pointers)[0]];\n    const range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY,\n    };\n    const check = (side) => {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || (aspectRatio\n          && (top <= minTop || bottom >= maxHeight)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || (aspectRatio\n          && (left <= minLeft || right >= maxWidth)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || (aspectRatio\n          && (top <= minTop || bottom >= maxHeight)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || (aspectRatio\n          && (left <= minLeft || right >= maxWidth)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), event);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    forEach(pointers, (p) => {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  },\n};\n","import {\n  CLASS_CROP,\n  CLASS_DISABLED,\n  CLASS_HIDDEN,\n  CLASS_MODAL,\n  CLASS_MOVE,\n  DATA_ACTION,\n  DRAG_MODE_CROP,\n  DRAG_MODE_MOVE,\n  DRAG_MODE_NONE,\n  EVENT_ZOOM,\n  NAMESPACE,\n} from './constants';\nimport {\n  addClass,\n  assign,\n  dispatchEvent,\n  forEach,\n  getAdjustedSizes,\n  getOffset,\n  getPointersCenter,\n  getSourceCanvas,\n  isNumber,\n  isPlainObject,\n  isUndefined,\n  normalizeDecimalNumber,\n  removeClass,\n  setData,\n  toggleClass,\n} from './utilities';\n\nexport default {\n  // Show the crop box manually\n  crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n\n  // Reset the image and crop box to their initial states\n  reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n\n  // Clear the crop box\n  clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n      });\n\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true);\n\n      // Render canvas after crop box rendered\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace(url, hasSameSize = false) {\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n\n          forEach(this.previews, (element) => {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n\n  // Enable (unfreeze) the cropper\n  enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  // Disable (freeze) the cropper\n  disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy() {\n    const { element } = this;\n\n    if (!element[NAMESPACE]) {\n      return this;\n    }\n\n    element[NAMESPACE] = undefined;\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move(offsetX, offsetY = offsetX) {\n    const { left, top } = this.canvasData;\n\n    return this.moveTo(\n      isUndefined(offsetX) ? offsetX : (left + Number(offsetX)),\n      isUndefined(offsetY) ? offsetY : (top + Number(offsetY)),\n    );\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo(x, y = x) {\n    const { canvasData } = this;\n    let changed = false;\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom(ratio, _originalEvent) {\n    const { canvasData } = this;\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo((canvasData.width * ratio) / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo(ratio, pivot, _originalEvent) {\n    const { options, canvasData } = this;\n    const {\n      width,\n      height,\n      naturalWidth,\n      naturalHeight,\n    } = canvasData;\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      const newWidth = naturalWidth * ratio;\n      const newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent,\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        const { pointers } = this;\n        const offset = getOffset(this.cropper);\n        const center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY,\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * (\n          ((center.pageX - offset.left) - canvasData.left) / width\n        );\n        canvasData.top -= (newHeight - height) * (\n          ((center.pageY - offset.top) - canvasData.top) / height\n        );\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * (\n          (pivot.x - canvasData.left) / width\n        );\n        canvasData.top -= (newHeight - height) * (\n          (pivot.y - canvasData.top) / height\n        );\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX(scaleX) {\n    const { scaleY } = this.imageData;\n\n    return this.scale(scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY(scaleY) {\n    const { scaleX } = this.imageData;\n\n    return this.scale(isNumber(scaleX) ? scaleX : 1, scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale(scaleX, scaleY = scaleX) {\n    const { imageData } = this;\n    let transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData(rounded = false) {\n    const {\n      options,\n      imageData,\n      canvasData,\n      cropBoxData,\n    } = this;\n    let data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height,\n      };\n\n      const ratio = imageData.width / imageData.naturalWidth;\n\n      forEach(data, (n, i) => {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        const bottom = Math.round(data.y + data.height);\n        const right = Math.round(data.x + data.width);\n\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData(data) {\n    const { options, imageData, canvasData } = this;\n    const cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      let transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      const ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = (data.x * ratio) + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = (data.y * ratio) + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData() {\n    const { canvasData } = this;\n    const data = {};\n\n    if (this.ready) {\n      forEach([\n        'left',\n        'top',\n        'width',\n        'height',\n        'naturalWidth',\n        'naturalHeight',\n      ], (n) => {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData(data) {\n    const { canvasData } = this;\n    const { aspectRatio } = canvasData;\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData() {\n    const { cropBoxData } = this;\n    let data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height,\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData(data) {\n    const { cropBoxData } = this;\n    const { aspectRatio } = this.options;\n    let widthChanged;\n    let heightChanged;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas(options = {}) {\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    const { canvasData } = this;\n    const source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    let {\n      x: initialX,\n      y: initialY,\n      width: initialWidth,\n      height: initialHeight,\n    } = this.getData();\n    const ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    const aspectRatio = initialWidth / initialHeight;\n    const maxSizes = getAdjustedSizes({\n      aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity,\n    });\n    const minSizes = getAdjustedSizes({\n      aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0,\n    }, 'cover');\n    let {\n      width,\n      height,\n    } = getAdjustedSizes({\n      aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight),\n    });\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    const { imageSmoothingEnabled = true, imageSmoothingQuality } = options;\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    const sourceWidth = source.width;\n    const sourceHeight = source.height;\n\n    // Source canvas parameters\n    let srcX = initialX;\n    let srcY = initialY;\n    let srcWidth;\n    let srcHeight;\n\n    // Destination canvas parameters\n    let dstX;\n    let dstY;\n    let dstWidth;\n    let dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    const params = [\n      srcX,\n      srcY,\n      srcWidth,\n      srcHeight,\n    ];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      const scale = width / initialWidth;\n\n      params.push(\n        dstX * scale,\n        dstY * scale,\n        dstWidth * scale,\n        dstHeight * scale,\n      );\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    context.drawImage(source, ...params.map((param) => Math.floor(normalizeDecimalNumber(param))));\n\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio(aspectRatio) {\n    const { options } = this;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode(mode) {\n    const { options, dragBox, face } = this;\n\n    if (this.ready && !this.disabled) {\n      const croppable = mode === DRAG_MODE_CROP;\n      const movable = options.movable && mode === DRAG_MODE_MOVE;\n\n      mode = (croppable || movable) ? mode : DRAG_MODE_NONE;\n\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  },\n};\n","import DEFAULTS from './defaults';\nimport TEMPLATE from './template';\nimport render from './render';\nimport preview from './preview';\nimport events from './events';\nimport handlers from './handlers';\nimport change from './change';\nimport methods from './methods';\nimport {\n  ACTION_ALL,\n  CLASS_HIDDEN,\n  CLASS_HIDE,\n  CLASS_INVISIBLE,\n  CLASS_MOVE,\n  DATA_ACTION,\n  EVENT_READY,\n  MIME_TYPE_JPEG,\n  NAMESPACE,\n  REGEXP_DATA_URL,\n  REGEXP_DATA_URL_JPEG,\n  REGEXP_TAG_NAME,\n  WINDOW,\n} from './constants';\nimport {\n  addClass,\n  addListener,\n  addTimestamp,\n  arrayBufferToDataURL,\n  assign,\n  dataURLToArrayBuffer,\n  dispatchEvent,\n  isCrossOriginURL,\n  isFunction,\n  isPlainObject,\n  parseOrientation,\n  removeClass,\n  resetAndGetOrientation,\n  setData,\n} from './utilities';\n\nconst AnotherCropper = WINDOW.Cropper;\n\nclass Cropper {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  constructor(element, options = {}) {\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  init() {\n    const { element } = this;\n    const tagName = element.tagName.toLowerCase();\n    let url;\n\n    if (element[NAMESPACE]) {\n      return;\n    }\n\n    element[NAMESPACE] = this;\n\n    if (tagName === 'img') {\n      this.isImg = true;\n\n      // e.g.: \"img/picture.jpg\"\n      url = element.getAttribute('src') || '';\n      this.originalUrl = url;\n\n      // Stop when it's a blank image\n      if (!url) {\n        return;\n      }\n\n      // e.g.: \"https://example.com/img/picture.jpg\"\n      url = element.src;\n    } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n      url = element.toDataURL();\n    }\n\n    this.load(url);\n  }\n\n  load(url) {\n    if (!url) {\n      return;\n    }\n\n    this.url = url;\n    this.imageData = {};\n\n    const { element, options } = this;\n\n    if (!options.rotatable && !options.scalable) {\n      options.checkOrientation = false;\n    }\n\n    // Only IE10+ supports Typed Arrays\n    if (!options.checkOrientation || !window.ArrayBuffer) {\n      this.clone();\n      return;\n    }\n\n    // Detect the mime type of the image directly if it is a Data URL\n    if (REGEXP_DATA_URL.test(url)) {\n      // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n      if (REGEXP_DATA_URL_JPEG.test(url)) {\n        this.read(dataURLToArrayBuffer(url));\n      } else {\n        // Only a JPEG image may contains Exif Orientation information,\n        // the rest types of Data URLs are not necessary to check orientation at all.\n        this.clone();\n      }\n\n      return;\n    }\n\n    // 1. Detect the mime type of the image by a XMLHttpRequest.\n    // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n    const xhr = new XMLHttpRequest();\n    const clone = this.clone.bind(this);\n\n    this.reloading = true;\n    this.xhr = xhr;\n\n    // 1. Cross origin requests are only supported for protocol schemes:\n    // http, https, data, chrome, chrome-extension.\n    // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n    // in some browsers as IE11 and Safari.\n    xhr.onabort = clone;\n    xhr.onerror = clone;\n    xhr.ontimeout = clone;\n\n    xhr.onprogress = () => {\n      // Abort the request directly if it not a JPEG image for better performance\n      if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n        xhr.abort();\n      }\n    };\n\n    xhr.onload = () => {\n      this.read(xhr.response);\n    };\n\n    xhr.onloadend = () => {\n      this.reloading = false;\n      this.xhr = null;\n    };\n\n    // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n    if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n      url = addTimestamp(url);\n    }\n\n    // The third parameter is required for avoiding side-effect (#682)\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.withCredentials = element.crossOrigin === 'use-credentials';\n    xhr.send();\n  }\n\n  read(arrayBuffer) {\n    const { options, imageData } = this;\n\n    // Reset the orientation value to its default value 1\n    // as some iOS browsers will render image with its orientation\n    const orientation = resetAndGetOrientation(arrayBuffer);\n    let rotate = 0;\n    let scaleX = 1;\n    let scaleY = 1;\n\n    if (orientation > 1) {\n      // Generate a new URL which has the default orientation value\n      this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n      ({ rotate, scaleX, scaleY } = parseOrientation(orientation));\n    }\n\n    if (options.rotatable) {\n      imageData.rotate = rotate;\n    }\n\n    if (options.scalable) {\n      imageData.scaleX = scaleX;\n      imageData.scaleY = scaleY;\n    }\n\n    this.clone();\n  }\n\n  clone() {\n    const { element, url } = this;\n    let { crossOrigin } = element;\n    let crossOriginUrl = url;\n\n    if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n      if (!crossOrigin) {\n        crossOrigin = 'anonymous';\n      }\n\n      // Bust cache when there is not a \"crossOrigin\" property (#519)\n      crossOriginUrl = addTimestamp(url);\n    }\n\n    this.crossOrigin = crossOrigin;\n    this.crossOriginUrl = crossOriginUrl;\n\n    const image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = crossOriginUrl || url;\n    image.alt = element.alt || 'The image to crop';\n    this.image = image;\n    image.onload = this.start.bind(this);\n    image.onerror = this.stop.bind(this);\n    addClass(image, CLASS_HIDE);\n    element.parentNode.insertBefore(image, element.nextSibling);\n  }\n\n  start() {\n    const { image } = this;\n\n    image.onload = null;\n    image.onerror = null;\n    this.sizing = true;\n\n    // Match all browsers that use WebKit as the layout engine in iOS devices,\n    // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n    const isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n    const done = (naturalWidth, naturalHeight) => {\n      assign(this.imageData, {\n        naturalWidth,\n        naturalHeight,\n        aspectRatio: naturalWidth / naturalHeight,\n      });\n      this.initialImageData = assign({}, this.imageData);\n      this.sizing = false;\n      this.sized = true;\n      this.build();\n    };\n\n    // Most modern browsers (excepts iOS WebKit)\n    if (image.naturalWidth && !isIOSWebKit) {\n      done(image.naturalWidth, image.naturalHeight);\n      return;\n    }\n\n    const sizingImage = document.createElement('img');\n    const body = document.body || document.documentElement;\n\n    this.sizingImage = sizingImage;\n\n    sizingImage.onload = () => {\n      done(sizingImage.width, sizingImage.height);\n\n      if (!isIOSWebKit) {\n        body.removeChild(sizingImage);\n      }\n    };\n\n    sizingImage.src = image.src;\n\n    // iOS WebKit will convert the image automatically\n    // with its orientation once append it into DOM (#279)\n    if (!isIOSWebKit) {\n      sizingImage.style.cssText = (\n        'left:0;'\n        + 'max-height:none!important;'\n        + 'max-width:none!important;'\n        + 'min-height:0!important;'\n        + 'min-width:0!important;'\n        + 'opacity:0;'\n        + 'position:absolute;'\n        + 'top:0;'\n        + 'z-index:-1;'\n      );\n      body.appendChild(sizingImage);\n    }\n  }\n\n  stop() {\n    const { image } = this;\n\n    image.onload = null;\n    image.onerror = null;\n    image.parentNode.removeChild(image);\n    this.image = null;\n  }\n\n  build() {\n    if (!this.sized || this.ready) {\n      return;\n    }\n\n    const { element, options, image } = this;\n\n    // Create cropper elements\n    const container = element.parentNode;\n    const template = document.createElement('div');\n\n    template.innerHTML = TEMPLATE;\n\n    const cropper = template.querySelector(`.${NAMESPACE}-container`);\n    const canvas = cropper.querySelector(`.${NAMESPACE}-canvas`);\n    const dragBox = cropper.querySelector(`.${NAMESPACE}-drag-box`);\n    const cropBox = cropper.querySelector(`.${NAMESPACE}-crop-box`);\n    const face = cropBox.querySelector(`.${NAMESPACE}-face`);\n\n    this.container = container;\n    this.cropper = cropper;\n    this.canvas = canvas;\n    this.dragBox = dragBox;\n    this.cropBox = cropBox;\n    this.viewBox = cropper.querySelector(`.${NAMESPACE}-view-box`);\n    this.face = face;\n\n    canvas.appendChild(image);\n\n    // Hide the original image\n    addClass(element, CLASS_HIDDEN);\n\n    // Inserts the cropper after to the current image\n    container.insertBefore(cropper, element.nextSibling);\n\n    // Show the image if is hidden\n    if (!this.isImg) {\n      removeClass(image, CLASS_HIDE);\n    }\n\n    this.initPreview();\n    this.bind();\n\n    options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n    options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n    options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n    addClass(cropBox, CLASS_HIDDEN);\n\n    if (!options.guides) {\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-dashed`), CLASS_HIDDEN);\n    }\n\n    if (!options.center) {\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-center`), CLASS_HIDDEN);\n    }\n\n    if (options.background) {\n      addClass(cropper, `${NAMESPACE}-bg`);\n    }\n\n    if (!options.highlight) {\n      addClass(face, CLASS_INVISIBLE);\n    }\n\n    if (options.cropBoxMovable) {\n      addClass(face, CLASS_MOVE);\n      setData(face, DATA_ACTION, ACTION_ALL);\n    }\n\n    if (!options.cropBoxResizable) {\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-line`), CLASS_HIDDEN);\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-point`), CLASS_HIDDEN);\n    }\n\n    this.render();\n    this.ready = true;\n    this.setDragMode(options.dragMode);\n\n    if (options.autoCrop) {\n      this.crop();\n    }\n\n    this.setData(options.data);\n\n    if (isFunction(options.ready)) {\n      addListener(element, EVENT_READY, options.ready, {\n        once: true,\n      });\n    }\n\n    dispatchEvent(element, EVENT_READY);\n  }\n\n  unbuild() {\n    if (!this.ready) {\n      return;\n    }\n\n    this.ready = false;\n    this.unbind();\n    this.resetPreview();\n    this.cropper.parentNode.removeChild(this.cropper);\n    removeClass(this.element, CLASS_HIDDEN);\n  }\n\n  uncreate() {\n    if (this.ready) {\n      this.unbuild();\n      this.ready = false;\n      this.cropped = false;\n    } else if (this.sizing) {\n      this.sizingImage.onload = null;\n      this.sizing = false;\n      this.sized = false;\n    } else if (this.reloading) {\n      this.xhr.onabort = null;\n      this.xhr.abort();\n    } else if (this.image) {\n      this.stop();\n    }\n  }\n\n  /**\n   * Get the no conflict cropper class.\n   * @returns {Cropper} The cropper class.\n   */\n  static noConflict() {\n    window.Cropper = AnotherCropper;\n    return Cropper;\n  }\n\n  /**\n   * Change the default options.\n   * @param {Object} options - The new default options.\n   */\n  static setDefaults(options) {\n    assign(DEFAULTS, isPlainObject(options) && options);\n  }\n}\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n"],"names":["IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","value","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","Object","prototype","isPlainObject","constructor","call","error","isFunction","slice","Array","toArray","from","forEach","callback","isArray","length","key","keys","assign","target","args","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","undefined","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","defineProperty","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","maxRatio","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","getPointer","endOnly","pageX","pageY","end","getPointersCenter","count","getAdjustedSizes","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","fillColor","imageSmoothingEnabled","imageSmoothingQuality","maxWidth","maxHeight","minWidth","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","i","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","initialX","initialY","initialWidth","initialHeight","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","DEFAULTS","reloading","sizing","init","toDataURL","clone","read","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","stop","parentNode","insertBefore","nextSibling","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","TEMPLATE","getElementsByClassName","unbuild","events","handlers","methods"],"mappings":"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"}